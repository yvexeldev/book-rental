// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String?
  email      String
  password   String
  isVerified Boolean  @default(false)
  username   String?
  role       Role     @default(USER)
  createdAt  DateTime @default(now()) @db.Timestamptz()
  updatedAt  DateTime @updatedAt @db.Timestamptz()
  rentals    Rental[]

  @@map("users")
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}

model Book {
  id               Int      @id @default(autoincrement())
  title            String
  author           String
  isbn             String   @unique // International Standard Book Number
  available_copies Int      @default(0)
  createdAt        DateTime @default(now()) @db.Timestamptz()
  updatedAt        DateTime @updatedAt @db.Timestamptz()
  rentals          Rental[]

  @@map("books")
}

model Rental {
  id           String    @id @default(uuid())
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId       Int
  book         Book      @relation(fields: [bookId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  bookId       Int
  givenDate    DateTime  @db.Timestamptz()
  returnedDate DateTime? @db.Timestamptz()
  createdAt    DateTime  @default(now()) @db.Timestamptz()
  updatedAt    DateTime  @updatedAt @db.Timestamptz()

  @@map("rentals")
}
